# Generated by Django 5.1.1 on 2024-10-04 11:17

import accounts.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('STUDENT', 'Student'), ('TUTOR', 'Tutor')], default='STUDENT', max_length=20)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('phone_number', models.CharField(default='', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('current_grade', models.CharField(choices=[('FIRST', 'First year'), ('SECOND', 'Second year'), ('THIRD', 'Third year'), ('FOURTH', 'Fourth year'), ('POSTGRADUATE', 'Postgraduate')], default='FIRST', max_length=20)),
                ('university', models.CharField(choices=[('KU Leuven', 'KU Leuven'), ('Ghent University', 'Ghent University'), ('Wageningen University and Research', 'Wageningen University and Research'), ('Aarhus University', 'Aarhus University'), ('Uppsala University', 'Uppsala University'), ('UCLouvain', 'UCLouvain'), ('Institute for European Studies - Université libre de Bruxelles', 'Institute for European Studies - Université libre de Bruxelles'), ('University of Antwerp', 'University of Antwerp'), ('MIP Politecnico Di Milano', 'MIP Politecnico Di Milano'), ('Vrije Universiteit Brussel (VUB)', 'Vrije Universiteit Brussel (VUB)'), ('University of Liège', 'University of Liège'), ('University of Kent', 'University of Kent'), ('Politecnico di Torino', 'Politecnico di Torino'), ('Hasselt University', 'Hasselt University'), ('University of Luxembourg', 'University of Luxembourg'), ('Université de Mons', 'Université de Mons'), ('University of Salzburg', 'University of Salzburg'), ('University of Namur', 'University of Namur'), ('Institute of Tropical Medicine Antwerp (ITM)', 'Institute of Tropical Medicine Antwerp (ITM)'), ('GEM Stones', 'GEM Stones'), ('Haute Ecole Charlemagne', 'Haute Ecole Charlemagne'), ('Brussels School of Governance', 'Brussels School of Governance'), ('VIVES University of Applied Sciences', 'VIVES University of Applied Sciences'), ('Evangelische Theologische Faculteit (ETF)', 'Evangelische Theologische Faculteit (ETF)'), ('LUCA School of Arts - Campus Sint-Lucas Brussels', 'LUCA School of Arts - Campus Sint-Lucas Brussels'), ('IAD - Institut des Arts de Diffusion', 'IAD - Institut des Arts de Diffusion'), ('Catholic University College of Bruges-Ostend', 'Catholic University College of Bruges-Ostend'), ('ESRA International Film School', 'ESRA International Film School'), ('Lerian-Nti', 'Lerian-Nti'), ('EU-Japan Centre for Industrial Cooperation', 'EU-Japan Centre for Industrial Cooperation'), ('Flemish Interuniversity Council - University Development Cooperation (VLIR-UOS)', 'Flemish Interuniversity Council - University Development Cooperation (VLIR-UOS)'), ('FWO: Fonds Wetenschappelijk Onderzoek - Vlaanderen', 'FWO: Fonds Wetenschappelijk Onderzoek - Vlaanderen'), ('GLOBIS University', 'GLOBIS University'), ('Université UCLouvain Saint-Louis Bruxelles', 'Université UCLouvain Saint-Louis Bruxelles'), ('The United Nations University Institute on Comparative Regional Integration Studies (UNU-CRIS)', 'The United Nations University Institute on Comparative Regional Integration Studies (UNU-CRIS)'), ('Thomas More', 'Thomas More'), ('UC Leuven-Limburg', 'UC Leuven-Limburg'), ('The Haute École de Namur-Liège-Luxembourg', 'The Haute École de Namur-Liège-Luxembourg'), ('The International School of Protocol & Diplomacy ISPD', 'The International School of Protocol & Diplomacy ISPD'), ('Artevelde University of Applied Sciences', 'Artevelde University of Applied Sciences'), ('Howest University of Applied Sciences', 'Howest University of Applied Sciences'), ('Haute Ecole Libre Mosane', 'Haute Ecole Libre Mosane'), ('United International Business Schools', 'United International Business Schools'), ('Odisee University', 'Odisee University'), ('Utrecht Summer School', 'Utrecht Summer School'), ('Entrepreneurship School', 'Entrepreneurship School'), ('EIT Food', 'EIT Food'), ('ECS European Communication School Brussels', 'ECS European Communication School Brussels'), ('ICHEC Brussels Management School', 'ICHEC Brussels Management School'), ('EUREC - The Association of European Renewable Energy Research Centres', 'EUREC - The Association of European Renewable Energy Research Centres'), ('College of Europe', 'College of Europe'), ('EIT Urban Mobility Master School', 'EIT Urban Mobility Master School'), ('UBI Business School', 'UBI Business School'), ('Antwerp Management School', 'Antwerp Management School'), ('Vlerick Business School', 'Vlerick Business School'), ('IHECS FORMATIONS - Journalism & Communication', 'IHECS FORMATIONS - Journalism & Communication'), ('Solvay Brussels School of Economics and Management', 'Solvay Brussels School of Economics and Management'), ('EIT RawMaterials Academy', 'EIT RawMaterials Academy'), ('InnoEnergy MastersPlus', 'InnoEnergy MastersPlus'), ('Centre international de formation européenne - CIFE', 'Centre international de formation européenne - CIFE'), ('Swiss School Of Business and Management', 'Swiss School Of Business and Management'), ('KdG University of Applied Sciences and Arts', 'KdG University of Applied Sciences and Arts'), ('Global Institute of Sport', 'Global Institute of Sport'), ('HEH - Haute Ecole de la Communauté française en Hainaut', 'HEH - Haute Ecole de la Communauté française en Hainaut'), ('Wallonie-Bruxelles International (WBI)', 'Wallonie-Bruxelles International (WBI)'), ('European Desk - Belgian-Italian Chamber of Commerce', 'European Desk - Belgian-Italian Chamber of Commerce'), ('EIT Digital Professional School', 'EIT Digital Professional School'), ('iSE The Institute of Sustainable Energy by InnoEnergy', 'iSE The Institute of Sustainable Energy by InnoEnergy'), ('Royal Military Academy', 'Royal Military Academy'), ('Haute Ecole de Namur', 'Haute Ecole de Namur'), ('Artesis Plantijn University of Applied Sciences and Arts Antwerp', 'Artesis Plantijn University of Applied Sciences and Arts Antwerp'), ('Belgium Directorate-General for Development Cooperation', 'Belgium Directorate-General for Development Cooperation'), ('Alliance française de Bruxelles-Europe', 'Alliance française de Bruxelles-Europe'), ('European Public Health Master', 'European Public Health Master'), ('The European Heart Academy', 'The European Heart Academy'), ('Cours Florent School', 'Cours Florent School'), ('Erasmus Brussels University of Applied Sciences and Arts', 'Erasmus Brussels University of Applied Sciences and Arts'), ('IPE Management School Paris', 'IPE Management School Paris'), ('Haute École Albert Jacquard', 'Haute École Albert Jacquard')], max_length=255)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='Tutor',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='StudentMore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='students_more', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TutorMore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_approved', models.BooleanField(default=False)),
                ('photo_url', models.ImageField(upload_to=accounts.models.upload_to)),
                ('confirmation_file', models.FileField(upload_to=accounts.models.file_upload_to)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tutors_more', to=settings.AUTH_USER_MODEL)),
                ('students', models.ManyToManyField(blank=True, to='accounts.student')),
            ],
        ),
    ]