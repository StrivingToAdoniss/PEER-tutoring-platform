version: '3'

services:
  backend:
    build:
      context: ./backend
    volumes:
      - static:/static
    env_file:
      - backend/backend/.env
    ports:
      - "8000:8000"
    depends_on:
      - postgres-db
    command: >
      /bin/bash -c "python3 manage.py collectstatic --noinput &&
                    python3 manage.py makemigrations --noinput&&
                    python3 manage.py migrate --noinput &&
                    python3 manage.py shell -c \"from django.contrib.auth import get_user_model
      User = get_user_model(); User.objects.create_superuser('admin@gmail.com', 'Django@2004')\" 
      && gunicorn backend.wsgi:application --bind 0.0.0.0:8000"
    restart: on-failure

  frontend:
    build:
      context: ./frontend
    volumes:
      - frontend:/app/build
    restart: always
  nginx:
    build:
      context: ./nginx
    volumes:
      - static:/static
      - frontend:/var/www/frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
  postgres-db:
    image: postgres:14.8-alpine3.18

    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=django

    ports:
      - "5432:5432"

  redis-server:
    image: redis:7.2.5-alpine3.20


  celery:
    container_name: celery
    build:
      context: ./backend
    command: celery --app=backend worker -l INFO
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - redis-server
      - backend



volumes:
  static:
  frontend:
