version: '3'

services:
  selenium-firefox:
    image: selenium/standalone-firefox:latest
    shm_size: '2gb'
    ports:
      - "4444:4444"
      - "7900:7900"
    healthcheck:
      test: [ "CMD", "curl", "-sS", "http://localhost:4444/wd/hub/status" ]
      interval: 30s
      timeout: 10s
      retries: 3

  e2e-tests:
    build: e2e-tests
    environment:
      - SELENIUM_HOST=selenium-firefox
    depends_on:
      nginx:
        condition: service_started
      selenium-firefox:
        condition: service_healthy
    volumes:
      - ./e2e_tests_screenshots/:/app/screenshots

  db-migrations:
    build: ./backend
    depends_on:
      postgres-db:
        condition: service_healthy
    command: python3 manage.py migrate --noinput

  backend:
    build:
      context: ./backend
    volumes:
      - static:/static
    env_file:
      - backend/backend/.env
    ports:
      - "8000:8000"
    depends_on:
      postgres-db:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    command: >
      /bin/bash -c "python3 manage.py collectstatic --noinput &&
                    python3 manage.py initadmin &&
                    gunicorn backend.wsgi:application --bind 0.0.0.0:8000"

  frontend-builder:
    environment:
      - CI=false
      - REACT_APP_BASE_URL=http://backend:8000
    build:
      context: ./frontend
    volumes:
      - frontend:/app/build

  nginx:
    build:
      context: ./nginx
    volumes:
      - static:/static
      - frontend:/var/www/frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_started
      frontend-builder:
        condition: service_completed_successfully

  postgres-db:
    image: postgres:14.8-alpine3.18

    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=django

    ports:
      - "5432:5432"

    healthcheck:
      test: [ "CMD-SHELL", "PGPASSWORD=$${POSTGRES_PASSWORD} pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      retries: 3
      timeout: 5s

  redis-server:
    image: redis:7.2.5-alpine3.20

  celery:
    container_name: celery
    build:
      context: ./backend
    command: celery --app=backend worker -l INFO
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - redis-server
      - backend

volumes:
  static:
  frontend:
